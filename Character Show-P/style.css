/* Animation */
/* Animation */
/* Animation */
@keyframes ani-head {
	to {
		transform: rotateX(-10deg);
	}
}

@keyframes ani-running-leg {
	from {
		transform: rotateX(-30deg);
	}
	to {
		transform: rotateX(30deg);
	}
}

@keyframes ani-running-arm {
	from {
		transform: rotateY(30deg);
	}
	to {
		transform: rotateY(-30deg);
	}
}

body {
	height: 500vw;
	font-family: "Apple SD Gothic Neo", "Roboto", "Noto Sans KR", NanumGothic,
		"Malgun Gothic", sans-serif;
	-webkit-overflow-scrolling: touch;
	color: #555;
	background: #fff000;
	transition: background 0.5s;
}
body[data-char="ragirl"] {
	background: #ff7200;
}

.world {
	position: fixed;
	left: 0;
	top: 0;
	width: 100vw;
	height: 100vh;
	perspective: 1000px;
}

.stage {
	position: absolute;
	left: 0;
	top: 0;
	width: 100vw;
	height: 100vh;
	/* for inheritance perspective 3d */
	transform-style: preserve-3d;
}

/* 꽉찬 상태를 디폴트로 잡고 z축으로 확대 축소 효과를 낸다 */
.house {
	width: 100vw;
	height: 100vh;
	/* 줌아웃시킨상태 */
	transform: translateZ(-490vw);
	transform-style: preserve-3d;
	font-size: 100px;
}

/* overlap all walls */
.wall {
	position: absolute;
	left: 0;
	top: 0;
	width: 100vw;
	height: 100vh;
	background-color: rgba(255, 255, 255, 0.8);
}

.wall-left {
	width: 1000vw;
	/* wall의 10배(1000vw) 니깐 돌릴때 센터값이 500 기준으로 돌린다. 그래서 500만큼 떙겨줘야 붙는다 */
	/* 애네는 방향을 돌렸으니깐(90도) z축이  x축처럼 보인다 */
	transform: rotateY(90deg) translateZ(-500vw);
	background: #f8f8f8;
}

.wall-right {
	width: 1000vw;
	transform: rotateY(90deg) translateZ(-400vw);
	background: #f8f8f8;
}

.wall-front-a {
	transform: translateZ(300vw);
}
.wall-front-b {
	transform: translateZ(50vw);
}
.wall-front-c {
	transform: translateZ(-200vw);
}
.wall-front-d {
	transform: translateZ(-500vw);
}

/* 가운데 놓기 */
.wall-content {
	display: flex;
	align-items: center;
	justify-content: center;
	height: 100vh;
}

.progress-bar-con {
	position: fixed;
	left: 0;
	top: 0;
	width: 100vw;
	height: 5px;
	z-index: 100;
	background-color: #555;
}

.progress-bar {
	width: 0;
	height: 100%;
	background-color: #00a8ff;
}

/*  Character */
/*  Character */
/*  Character */

/* 캐릭터의 방향셋팅, css는 회전, 방향결정은 JS로 */

.character {
	position: absolute;
	left: 12%;
	bottom: 5%;
	width: 10vw;
	height: 15.58vw;
	transform-style: preserve-3d;
}

/* make decisions about angle of character */
.character[data-direction="forward"] {
	transform: rotateY(180deg);
}
.character[data-direction="backward"] {
	transform: rotateY(0deg);
}
.character[data-direction="left"] {
	transform: rotateY(-90deg);
}
.character[data-direction="right"] {
	transform: rotateY(90deg);
}

.character-face-con {
	position: absolute;
	transform-style: preserve-3d;
	transition: 1s;
}

/* overlap face front and back */
.character-face {
	position: absolute;
	left: 0;
	top: 0;
	/* why 100%? : inherit parent class size */
	width: 100%;
	height: 100%;
	background-repeat: no-repeat;
	background-position: 0 0;
	background-size: cover;
	-webkit-backface-visibility: hidden;
	backface-visibility: hidden;
}

.character-face.face-back {
	/* turn face-back over for showing the chracter backface when the chracter is turned over */
	transform: rotateY(180deg);
}

/* Start Each Setting  */
.character-head {
	/* calc 계산해주는 함수
    전체에서 캐릭터 머리부분 left에 남는 여백크기가 전체크기에 대해 몇퍼센트인지 나타내는 식
            왼쪽여백/ 전체너비    퍼센트  */
	left: calc(42 / 856 * 100%);
	top: 0;
	z-index: 60;
	/* 머리둘레 / 전체너비*/
	width: calc(770 / 856 * 100%);
	/* 머리높이 /전체 높이 */
	height: calc(648 / 1334 * 100%);

	/* 트랜스폼할때 기준점이 어디에 두는냐, 디폴트는 센터 50%이다.
                        x축    y축(bottom 준 이유는 트렌지폼할때 목을 기준으로 움직이게 하기위해서) */
	transform-origin: center bottom;
	animation: ani-head 0.6s infinite alternate
		cubic-bezier(0.46, 0.18, 0.66, 0.93);
	/* 가속도 */
}
.character-head-face.face-front {
	background-image: url("images/ilbuni_head_front.png");
}
.character-head-face.face-back {
	background-image: url("images/ilbuni_head_back.png");
}
.character-torso {
	left: calc(208 / 856 * 100%);
	top: calc(647 / 1334 * 100%);
	z-index: 50;
	width: calc(428 / 856 * 100%);
	height: calc(385 / 1334 * 100%);
	transform-origin: center center;
}
.character-torso-face.face-front {
	background-image: url("images/ilbuni_body_front.png");
}
.character-torso-face.face-back {
	background-image: url("images/ilbuni_body_back.png");
}
.character-arm-right {
	left: 0;
	top: calc(648 / 1334 * 100%);
	width: calc(244 / 856 * 100%);
	height: calc(307 / 1334 * 100%);
	transform-origin: right top;
}
.character-arm-right .face-front {
	background-image: url("images/ilbuni_arm_0.png");
}
.character-arm-right .face-back {
	background-image: url("images/ilbuni_arm_1.png");
}
.character-arm-left {
	left: calc(600 / 856 * 100%);
	top: calc(648 / 1334 * 100%);
	width: calc(244 / 856 * 100%);
	height: calc(307 / 1334 * 100%);
	transform-origin: left top;
}
.character-arm-left .face-front {
	background-image: url("images/ilbuni_arm_1.png");
}
.character-arm-left .face-back {
	background-image: url("images/ilbuni_arm_0.png");
}
.character-leg-right {
	left: calc(200 / 856 * 100%);
	top: calc(1031 / 1334 * 100%);
	width: calc(230 / 856 * 100%);
	height: calc(300 / 1334 * 100%);
	transform-origin: center top;
}
.character-leg-right .face-front {
	background-image: url("images/ilbuni_leg_0.png");
}
.character-leg-right .face-back {
	background-image: url("images/ilbuni_leg_1.png");
}
.character-leg-left {
	left: calc(414 / 856 * 100%);
	top: calc(1031 / 1334 * 100%);
	width: calc(230 / 856 * 100%);
	height: calc(300 / 1334 * 100%);
	transform-origin: center top;
}
.character-leg-left .face-front {
	background-image: url("images/ilbuni_leg_1.png");
}
.character-leg-left .face-back {
	background-image: url("images/ilbuni_leg_0.png");
}

/* 캐릭터에 러닝이 붙으면 애니메이션이 실행되도록
   JS에서 해줄건 마우스가 스크롤이 될때 캐릭터에 러닝 클래스를 붙여서 여기가 실행되게 해야한다*/
.character.running .character-leg-right {
	animation: ani-running-leg 0.2s alternate infinite linear;
}
.character.running .character-leg-left {
	animation: ani-running-leg 0.2s alternate-reverse infinite linear;
}
.character.running .character-arm {
	animation: ani-running-arm 0.2s alternate infinite linear;
}
body[data-char="ragirl"] .character {
	width: 12vw;
	height: calc(12vw * 1.4135);
}
body[data-char="ragirl"] .character-head {
	left: calc(23 / 948 * 100%);
	width: calc(920 / 948 * 100%);
	height: calc(750 / 1340 * 100%);
}
body[data-char="ragirl"] .character-head-face.face-front {
	background-image: url("images/ragirl_head_front.png");
}
body[data-char="ragirl"] .character-head-face.face-back {
	background-image: url("images/ragirl_head_back.png");
}
body[data-char="ragirl"] .character-torso {
	left: calc(273 / 948 * 100%);
	top: calc(630 / 1340 * 100%);
	z-index: 50;
	width: calc(402 / 948 * 100%);
	height: calc(444 / 1340 * 100%);
	transform-origin: center center;
}
body[data-char="ragirl"] .character-torso-face.face-front {
	background-image: url("images/ragirl_body_front.png");
}
body[data-char="ragirl"] .character-torso-face.face-back {
	background-image: url("images/ragirl_body_back.png");
}
body[data-char="ragirl"] .character-arm-right {
	left: calc(134 / 948 * 100%);
	top: calc(709 / 1340 * 100%);
	width: calc(138 / 948 * 100%);
	height: calc(300 / 1340 * 100%);
	transform-origin: right top;
}
body[data-char="ragirl"] .character-arm-right .face-front {
	background-image: url("images/ragirl_arm_0_front.png");
}
body[data-char="ragirl"] .character-arm-right .face-back {
	background-image: url("images/ragirl_arm_1_back.png");
}
body[data-char="ragirl"] .character-arm-left {
	left: calc(675 / 948 * 100%);
	top: calc(709 / 1340 * 100%);
	width: calc(138 / 948 * 100%);
	height: calc(300 / 1340 * 100%);
	transform-origin: left top;
}
body[data-char="ragirl"] .character-arm-left .face-front {
	background-image: url("images/ragirl_arm_1_front.png");
}
body[data-char="ragirl"] .character-arm-left .face-back {
	background-image: url("images/ragirl_arm_0_back.png");
}
body[data-char="ragirl"] .character-leg-right {
	left: calc(290 / 948 * 100%);
	top: calc(1075 / 1340 * 100%);
	width: calc(186 / 948 * 100%);
	height: calc(264 / 1340 * 100%);
	transform-origin: center top;
}
body[data-char="ragirl"] .character-leg-right .face-front {
	background-image: url("images/ragirl_leg_0.png");
}
body[data-char="ragirl"] .character-leg-right .face-back {
	background-image: url("images/ragirl_leg_1.png");
}
body[data-char="ragirl"] .character-leg-left {
	left: calc(474 / 948 * 100%);
	top: calc(1075 / 1340 * 100%);
	width: calc(186 / 948 * 100%);
	height: calc(264 / 1340 * 100%);
	transform-origin: center top;
}
body[data-char="ragirl"] .character-leg-left .face-front {
	background-image: url("images/ragirl_leg_1.png");
}
body[data-char="ragirl"] .character-leg-left .face-back {
	background-image: url("images/ragirl_leg_0.png");
}

/* character button */
.select-character {
	display: flex;
	align-items: center;
	position: fixed;
	right: 10px;
	top: 10px;
	z-index: 100;
}
.select-character-btn {
	width: 40px;
	height: 40px;
	margin-left: 5px;
	border: 0;
	background-color: transparent;
	background-repeat: no-repeat;
	background-position: 50% 50%;
	background-size: contain;
	cursor: pointer;
	transition: 0.5s;
}
.select-character-btn-ilbuni {
	background-image: url("images/ilbuni_head_front.png");
	background-size: 36px auto;
}
.select-character-btn-ragirl {
	background-image: url("images/ragirl_head_front.png");
	opacity: 0.5;
}
/* body에 데이터 캐릭터 값이 라걸이 되면  */
body[data-char="ragirl"] .select-character-btn-ilbuni {
	opacity: 0.5;
}
body[data-char="ilbuni"] .select-character-btn-ilbuni,
body[data-char="ragirl"] .select-character-btn-ragirl {
	opacity: 1;
}
